<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sjzc.kt.dao.QuestionResponseMapper" >
  <resultMap id="BaseResultMap" type="com.sjzc.kt.entity.QuestionResponse" >
    <id column="response_id" property="responseId" jdbcType="INTEGER" />
    <result column="question_id" property="questionId" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="answer" property="answer" jdbcType="INTEGER" />
    <result column="grade" property="grade" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="del_state" property="delState" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    response_id, question_id, member_id, answer, grade, create_time, modify_time, del_state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sjzc.kt.entity.QuestionResponseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from question_response
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from question_response
    where response_id = #{responseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from question_response
    where response_id = #{responseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sjzc.kt.entity.QuestionResponseExample" >
    delete from question_response
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sjzc.kt.entity.QuestionResponse" >
    insert into question_response (response_id, question_id, member_id, 
      answer, grade, create_time, 
      modify_time, del_state)
    values (#{responseId,jdbcType=INTEGER}, #{questionId,jdbcType=INTEGER}, #{memberId,jdbcType=INTEGER}, 
      #{answer,jdbcType=INTEGER}, #{grade,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{delState,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sjzc.kt.entity.QuestionResponse" useGeneratedKeys="true" keyProperty="responseId" >
    insert into question_response
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="responseId != null" >
        response_id,
      </if>
      <if test="questionId != null" >
        question_id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="answer != null" >
        answer,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="delState != null" >
        del_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="responseId != null" >
        #{responseId,jdbcType=INTEGER},
      </if>
      <if test="questionId != null" >
        #{questionId,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=INTEGER},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delState != null" >
        #{delState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sjzc.kt.entity.QuestionResponseExample" resultType="java.lang.Integer" >
    select count(*) from question_response
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update question_response
    <set >
      <if test="record.responseId != null" >
        response_id = #{record.responseId,jdbcType=INTEGER},
      </if>
      <if test="record.questionId != null" >
        question_id = #{record.questionId,jdbcType=INTEGER},
      </if>
      <if test="record.memberId != null" >
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.answer != null" >
        answer = #{record.answer,jdbcType=INTEGER},
      </if>
      <if test="record.grade != null" >
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delState != null" >
        del_state = #{record.delState,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update question_response
    set response_id = #{record.responseId,jdbcType=INTEGER},
      question_id = #{record.questionId,jdbcType=INTEGER},
      member_id = #{record.memberId,jdbcType=INTEGER},
      answer = #{record.answer,jdbcType=INTEGER},
      grade = #{record.grade,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      del_state = #{record.delState,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sjzc.kt.entity.QuestionResponse" >
    update question_response
    <set >
      <if test="questionId != null" >
        question_id = #{questionId,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="answer != null" >
        answer = #{answer,jdbcType=INTEGER},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delState != null" >
        del_state = #{delState,jdbcType=INTEGER},
      </if>
    </set>
    where response_id = #{responseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sjzc.kt.entity.QuestionResponse" >
    update question_response
    set question_id = #{questionId,jdbcType=INTEGER},
      member_id = #{memberId,jdbcType=INTEGER},
      answer = #{answer,jdbcType=INTEGER},
      grade = #{grade,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      del_state = #{delState,jdbcType=INTEGER}
    where response_id = #{responseId,jdbcType=INTEGER}
  </update>
</mapper>