<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sjzc.kt.test.TestMapper" >
  <resultMap id="BaseResultMap" type="com.sjzc.kt.test.Test" >
    <id column="test_id" property="testId" jdbcType="INTEGER" />
    <result column="test_name" property="testName" jdbcType="VARCHAR" />
    <result column="schedule_id" property="scheduleId" jdbcType="INTEGER" />
    <result column="describe" property="describe" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="teacher_id" property="teacherId" jdbcType="INTEGER" />
    <result column="duration" property="duration" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="del_state" property="delState" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    test_id, test_name, schedule_id, describe, state, teacher_id, duration, create_time, 
    modify_time, del_state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sjzc.kt.test.TestExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from test
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from test
    where test_id = #{testId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from test
    where test_id = #{testId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sjzc.kt.test.TestExample" >
    delete from test
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sjzc.kt.test.Test" >
    insert into test (test_id, test_name, schedule_id, 
      describe, state, teacher_id, 
      duration, create_time, modify_time, 
      del_state)
    values (#{testId,jdbcType=INTEGER}, #{testName,jdbcType=VARCHAR}, #{scheduleId,jdbcType=INTEGER}, 
      #{describe,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{teacherId,jdbcType=INTEGER}, 
      #{duration,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{delState,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sjzc.kt.test.Test" >
    insert into test
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="testId != null" >
        test_id,
      </if>
      <if test="testName != null" >
        test_name,
      </if>
      <if test="scheduleId != null" >
        schedule_id,
      </if>
      <if test="describe != null" >
        describe,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="duration != null" >
        duration,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="delState != null" >
        del_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="testId != null" >
        #{testId,jdbcType=INTEGER},
      </if>
      <if test="testName != null" >
        #{testName,jdbcType=VARCHAR},
      </if>
      <if test="scheduleId != null" >
        #{scheduleId,jdbcType=INTEGER},
      </if>
      <if test="describe != null" >
        #{describe,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="duration != null" >
        #{duration,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delState != null" >
        #{delState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sjzc.kt.test.TestExample" resultType="java.lang.Integer" >
    select count(*) from test
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update test
    <set >
      <if test="record.testId != null" >
        test_id = #{record.testId,jdbcType=INTEGER},
      </if>
      <if test="record.testName != null" >
        test_name = #{record.testName,jdbcType=VARCHAR},
      </if>
      <if test="record.scheduleId != null" >
        schedule_id = #{record.scheduleId,jdbcType=INTEGER},
      </if>
      <if test="record.describe != null" >
        describe = #{record.describe,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.teacherId != null" >
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.duration != null" >
        duration = #{record.duration,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delState != null" >
        del_state = #{record.delState,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update test
    set test_id = #{record.testId,jdbcType=INTEGER},
      test_name = #{record.testName,jdbcType=VARCHAR},
      schedule_id = #{record.scheduleId,jdbcType=INTEGER},
      describe = #{record.describe,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      teacher_id = #{record.teacherId,jdbcType=INTEGER},
      duration = #{record.duration,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      del_state = #{record.delState,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sjzc.kt.test.Test" >
    update test
    <set >
      <if test="testName != null" >
        test_name = #{testName,jdbcType=VARCHAR},
      </if>
      <if test="scheduleId != null" >
        schedule_id = #{scheduleId,jdbcType=INTEGER},
      </if>
      <if test="describe != null" >
        describe = #{describe,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="duration != null" >
        duration = #{duration,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delState != null" >
        del_state = #{delState,jdbcType=INTEGER},
      </if>
    </set>
    where test_id = #{testId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sjzc.kt.test.Test" >
    update test
    set test_name = #{testName,jdbcType=VARCHAR},
      schedule_id = #{scheduleId,jdbcType=INTEGER},
      describe = #{describe,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      teacher_id = #{teacherId,jdbcType=INTEGER},
      duration = #{duration,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      del_state = #{delState,jdbcType=INTEGER}
    where test_id = #{testId,jdbcType=INTEGER}
  </update>
</mapper>