<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sjzc.kt.dao.TaskAnswerMapper" >
  <resultMap id="BaseResultMap" type="com.sjzc.kt.entity.TaskAnswer" >
    <id column="answer_id" property="answerId" jdbcType="INTEGER" />
    <result column="task_id" property="taskId" jdbcType="INTEGER" />
    <result column="answer" property="answer" jdbcType="VARCHAR" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="evaluate" property="evaluate" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="del_state" property="delState" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    answer_id, task_id, answer, member_id, evaluate, create_time, modify_time, del_state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sjzc.kt.entity.TaskAnswerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task_answer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from task_answer
    where answer_id = #{answerId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from task_answer
    where answer_id = #{answerId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sjzc.kt.entity.TaskAnswerExample" >
    delete from task_answer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sjzc.kt.entity.TaskAnswer" >
    insert into task_answer (answer_id, task_id, answer, 
      member_id, evaluate, create_time, 
      modify_time, del_state)
    values (#{answerId,jdbcType=INTEGER}, #{taskId,jdbcType=INTEGER}, #{answer,jdbcType=VARCHAR}, 
      #{memberId,jdbcType=INTEGER}, #{evaluate,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{delState,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sjzc.kt.entity.TaskAnswer" >
    insert into task_answer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="answerId != null" >
        answer_id,
      </if>
      <if test="taskId != null" >
        task_id,
      </if>
      <if test="answer != null" >
        answer,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="evaluate != null" >
        evaluate,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="delState != null" >
        del_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="answerId != null" >
        #{answerId,jdbcType=INTEGER},
      </if>
      <if test="taskId != null" >
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="evaluate != null" >
        #{evaluate,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delState != null" >
        #{delState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sjzc.kt.entity.TaskAnswerExample" resultType="java.lang.Integer" >
    select count(*) from task_answer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update task_answer
    <set >
      <if test="record.answerId != null" >
        answer_id = #{record.answerId,jdbcType=INTEGER},
      </if>
      <if test="record.taskId != null" >
        task_id = #{record.taskId,jdbcType=INTEGER},
      </if>
      <if test="record.answer != null" >
        answer = #{record.answer,jdbcType=VARCHAR},
      </if>
      <if test="record.memberId != null" >
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.evaluate != null" >
        evaluate = #{record.evaluate,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delState != null" >
        del_state = #{record.delState,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update task_answer
    set answer_id = #{record.answerId,jdbcType=INTEGER},
      task_id = #{record.taskId,jdbcType=INTEGER},
      answer = #{record.answer,jdbcType=VARCHAR},
      member_id = #{record.memberId,jdbcType=INTEGER},
      evaluate = #{record.evaluate,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      del_state = #{record.delState,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sjzc.kt.entity.TaskAnswer" >
    update task_answer
    <set >
      <if test="taskId != null" >
        task_id = #{taskId,jdbcType=INTEGER},
      </if>
      <if test="answer != null" >
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="evaluate != null" >
        evaluate = #{evaluate,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delState != null" >
        del_state = #{delState,jdbcType=INTEGER},
      </if>
    </set>
    where answer_id = #{answerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sjzc.kt.entity.TaskAnswer" >
    update task_answer
    set task_id = #{taskId,jdbcType=INTEGER},
      answer = #{answer,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=INTEGER},
      evaluate = #{evaluate,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      del_state = #{delState,jdbcType=INTEGER}
    where answer_id = #{answerId,jdbcType=INTEGER}
  </update>
  
  <!-- 查询已回答用户列表 -->
  <select id="memberTaskListForTeacher" parameterType="Integer" resultType="map">
  select member.member_id as memberId, member.name as name,member.number as number,
  member.department as department,
  member.major as major,
  member.grades as grades,
  A.createTime AS createTime
  from member,
  (select task_answer.member_id as memberId,task_answer.task_id as taskId,UNIX_TIMESTAMP(task_answer.create_time)*1000 as createTime 
  from task_answer where task_answer.task_id=#{taskId} ) A 
  where member.member_id=A.memberId ORDER BY A.createTime desc

  </select>
  <!-- 查询未回答用户列表 -->
  <select id="memberTaskListNOForTeacher" resultType="map" >
  
	select member.member_id as memberId,
	member.name as name,
	member.number as number,
	member.department as department,
	member.major as major,
	member.grades as grades from member where  member.grades=#{grades} and member.member_id not in 
  <foreach item="item" index="index" collection="memberIds" 
                         open="(" separator="," close=")">
                        #{item}
                </foreach>
  </select>
  
  <!-- 查询已回答用户id -->
  <select id="doneMember" parameterType="Integer" resultType="Integer">
  select task_answer.member_id as memberId
    from task_answer where task_answer.task_id = #{taskId} and task_answer.del_state=1
	
  </select>
  
</mapper>